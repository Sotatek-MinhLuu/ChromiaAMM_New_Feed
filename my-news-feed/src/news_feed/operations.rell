
function require_is_signer(pubkey) = require(op_context.is_signer(pubkey), "User must sign this operation");

function require_user(id: byte_array) = require(user @? { id }, "User with id %b does not exist".format(id));
function format_user(user) = "%s#%s".format(user.name, user.id.to_hex().sub(0, 5));

operation create_user(name, pubkey) {
    val account = create_account_with_auth(single_sig_auth_descriptor(pubkey, set(["A", "T", "MySession"])));
    create user ( name, pubkey, account );
}
operation make_post(content: text) {
  val account = auth.authenticate();
  require(content.size() <= 255, "A post cannot be longer than 255 letters");
  val user = user @ { account };
  create post ( user, content );
}

operation follow_user(follow_id: byte_array) {
  val account = auth.authenticate();
  val user = user @ { account };
  val follow = require_user(follow_id);
  create follower ( user = follow, follower = user );
}

operation unfollow_user(unfollow_id: byte_array) {
  val account = auth.authenticate();
  val user = user @ { account };
  val follow = require_user(unfollow_id);
  delete follower @? { .user == follow, .follower == user };
}